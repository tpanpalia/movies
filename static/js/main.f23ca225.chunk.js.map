{"version":3,"sources":["assets/noimage.PNG","assets/home_cover.jpg","config/config.js","components/Search/MediaContent.jsx","components/Search/MovieDisplay.jsx","components/Search/TvShowsDisplay.jsx","components/Search/Search.jsx","components/RatingsPage/RatingDisplay.jsx","components/RatingsPage/MyRatings.jsx","components/Navigation/Navigation.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","MediaContent","props","useState","rating","setRating","isRatingSubmitted","setIsRatingSubmitted","dismissModal","onClose","Modal","isOpen","onDismiss","isBlocking","containerClassName","style","display","flexDirection","margin","IconButton","alignSelf","border","iconProps","iconName","onClick","src","data","poster_path","noImage","alt","media_type","name","title","textAlign","marginLeft","first_air_date","release_date","overview","Label","TextField","className","onChange","evt","newValue","Number","type","width","marginTop","fontWeight","PrimaryButton","text","fetch","id","method","headers","body","JSON","stringify","value","then","res","json","console","log","catch","err","MovieDisplay","isModalOpen","setIsModalOpen","details","isCLose","guestSessionId","justifyContent","padding","boxShadow","TvShowDisplay","Search","searchText","setSearchText","textFieldText","settextFieldText","searchedList","setSearchedList","displaySearchResults","setdisplaySearchResults","pivotSelected","setPivotSelected","useEffect","url","response","results","getCount","undefined","filter","x","length","e","backgroundColor","color","Pivot","onLinkClick","item","headerText","PivotItem","itemCount","flexWrap","map","key","RatingsDisplay","MyRatings","ratingDetails","setRatingDetails","Navigation","textDecoration","to","Home","home_cover","App","path","exact","component","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f23ca225.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noimage.ed046e66.PNG\";","module.exports = __webpack_public_path__ + \"static/media/home_cover.cd65e380.jpg\";","export const config = {\r\n    API_KEY : 'f3027946de6236d8203b4515ab0f1837',\r\n    BASE_URL_API : 'https://api.themoviedb.org/3',\r\n    BASE_URL_IMGAGES_W92 : 'https://image.tmdb.org/t/p/w92',\r\n    BASE_URL_IMGAGES_W185 : 'https://image.tmdb.org/t/p/w185',\r\n    GUEST_SESSION_ID : 'bfcff6381eac3c4cacc806087d12912e',\r\n    BASE_URL : 'https://localhost/3001/'\r\n}","import React, { useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  IconButton,\r\n  Label,\r\n  PrimaryButton,\r\n  TextField\r\n} from \"office-ui-fabric-react\";\r\nimport { config } from \"../../config/config\";\r\nimport noImage from \"../../assets/noimage.PNG\";\r\n\r\nconst MediaContent = (props) => {\r\n  const [rating, setRating] = useState(0);\r\n  const [isRatingSubmitted, setIsRatingSubmitted] = useState(false);\r\n\r\n  //Function to close the modal on dismiss and close button\r\n  const dismissModal = () => {\r\n    props.onClose(false);\r\n  };\r\n\r\n  //Function to set the value of rating Entered\r\n  const onRatingChange = (evt, newValue) => {\r\n    setRating(Number(newValue));\r\n  };\r\n\r\n  //Function to submit the rating on Submit button click\r\n  const submitRating = () => {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json;charset=utf-8\",\r\n    };\r\n    fetch(\r\n      `${config.BASE_URL_API}/${\r\n        props.data.media_type === \"tv\" ? `tv` : `movie`\r\n      }/${props.data.id}/rating?api_key=${config.API_KEY}&guest_session_id=${\r\n        config.GUEST_SESSION_ID\r\n      }`,\r\n      {\r\n        method: \"POST\",\r\n        headers,\r\n        body: JSON.stringify({ value: rating }),\r\n      }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n\r\n    setIsRatingSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={props.isOpen}\r\n      onDismiss={dismissModal}\r\n      isBlocking={false}\r\n      containerClassName=\"mediaContentContainer\"\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"2%\" }}>\r\n        <IconButton\r\n          style={{ alignSelf: \"flex-end\", border: \"1px solid\" }}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          onClick={dismissModal}\r\n        />\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <img\r\n            src={\r\n              props.data.poster_path !== null\r\n                ? `${config.BASE_URL_IMGAGES_W185}/${props.data.poster_path}`\r\n                : noImage\r\n            }\r\n            alt={\r\n              props.data.media_type === \"tv\"\r\n                ? props.data.name\r\n                : props.data.title\r\n            }\r\n          />\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h2 style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n              {props.data.media_type === \"tv\"\r\n                ? props.data.name\r\n                : props.data.title}\r\n            </h2>\r\n            <p style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n              {props.data.media_type === \"tv\"\r\n                ? props.data.first_air_date\r\n                : props.data.release_date}\r\n            </p>\r\n            <p style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n              {props.data.overview}\r\n            </p>\r\n            <div\r\n              style={{ display: \"flex\", flexDirection: \"row\", margin: \"2%\" }}\r\n            >\r\n              <Label>Rating </Label>\r\n              <TextField\r\n                className=\"ratingTextField\"\r\n                onChange={onRatingChange}\r\n                type=\"number\"\r\n                style={{ width: \"50%\", marginLeft: \"1%\" }}\r\n              />\r\n              {isRatingSubmitted ? (\r\n                <span style={{ marginTop: \"5%\", fontWeight: \"bold\" }}>\r\n                  Submitted !!\r\n                </span>\r\n              ) : (\r\n                <PrimaryButton\r\n                  text=\"Submit\"\r\n                  onClick={submitRating}\r\n                  style={{ marginLeft: \"1%\" }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MediaContent;\r\n","import React, { useState } from \"react\";\r\nimport \"../../assets/styles.css\";\r\nimport MediaContent from \"./MediaContent\";\r\nimport { config } from \"../../config/config\";\r\nimport noImage from \"../../assets/noimage.PNG\";\r\n\r\nconst MovieDisplay = (props) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  //Function to display modal with media details on div click\r\n  const handleDivClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  //Function to close the modal\r\n  const handleCloseModal = (isCLose) => {\r\n    setIsModalOpen(isCLose);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <MediaContent\r\n          isOpen={isModalOpen}\r\n          data={props.details}\r\n          onClose={handleCloseModal}\r\n          guestSessionId={props.guestSessionId}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"mediaContainer\"\r\n        onClick={handleDivClick}\r\n        style={{\r\n          width: \"10%\",\r\n          textAlign: \"center\",\r\n          margin: \"1%\",\r\n          justifyContent: \"center\",\r\n          padding: \"0.5%\",\r\n          boxShadow:\r\n            \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\r\n        }}\r\n      >\r\n        <img\r\n          src={\r\n            props.details.poster_path !== null\r\n              ? `${config.BASE_URL_IMGAGES_W92}/${props.details.poster_path}`\r\n              : noImage\r\n          }\r\n          alt={props.details.title}\r\n        />\r\n        <p>{props.details.title}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDisplay;\r\n","import React, { useState } from \"react\";\r\nimport \"../../assets/styles.css\";\r\nimport MediaContent from \"./MediaContent\";\r\nimport { config } from \"../../config/config\";\r\nimport noImage from \"../../assets/noimage.PNG\";\r\n\r\nconst TvShowDisplay = (props) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  //Function to open Modal with media details on div click\r\n  const handleDivClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  //Function to close modal\r\n  const handleCloseModal = (isCLose) => {\r\n    setIsModalOpen(isCLose);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isModalOpen && (\r\n        <MediaContent\r\n          isOpen={isModalOpen}\r\n          data={props.details}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n      <div\r\n        className=\"mediaContainer\"\r\n        style={{\r\n          width: \"10%\",\r\n          textAlign: \"center\",\r\n          margin: \"1%\",\r\n          justifyContent: \"center\",\r\n          padding: \"0.5%\",\r\n          boxShadow:\r\n            \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\r\n        }}\r\n        onClick={handleDivClick}\r\n      >\r\n        <img\r\n          src={\r\n            props.details.poster_path !== null\r\n              ? `${config.BASE_URL_IMGAGES_W92}/${props.details.poster_path}`\r\n              : noImage\r\n          }\r\n          alt={props.details.name}\r\n        />\r\n        <p>{props.details.name}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TvShowDisplay;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { config } from \"../../config/config\";\r\nimport {\r\n  TextField,\r\n  Pivot,\r\n  PivotItem,\r\n  IconButton,\r\n} from \"office-ui-fabric-react\";\r\nimport MovieDisplay from \"./MovieDisplay\";\r\nimport TvShowDisplay from \"./TvShowsDisplay\";\r\n\r\nconst Search = () => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [textFieldText, settextFieldText] = useState(\"\");\r\n  const [searchedList, setSearchedList] = useState(null);\r\n  const [displaySearchResults, setdisplaySearchResults] = useState(false);\r\n  const [pivotSelected, setPivotSelected] = useState(\"Movies\");\r\n\r\n  //Fetching the search result data\r\n  useEffect(() => {\r\n    let url = `${config.BASE_URL_API}/search/multi?api_key=${config.API_KEY}&language=en-US&query=${searchText}&page=1&include_adult=false`;\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setSearchedList(data.results));\r\n  }, [searchText]);\r\n\r\n  //Storing the value to be searched on 'onChange' event\r\n  const handleTextChange = (e, newValue) => {\r\n    settextFieldText(newValue);\r\n  };\r\n\r\n  //Function to handle Search button clicks\r\n  const onSearchButtonClick = () => {\r\n    setSearchText(textFieldText);\r\n    setdisplaySearchResults(true);\r\n  };\r\n\r\n  //Function to handle the state of Pivot change\r\n  const handleState = (item) => {\r\n    setPivotSelected(item.props.headerText);\r\n  };\r\n\r\n  //Function to get the count in Pivot element\r\n  const getCount = (type) => {\r\n    if (searchedList !== null && searchedList !== undefined) {\r\n      if (type === \"Movies\") {\r\n        return searchedList.filter((x) => x.media_type === \"movie\").length;\r\n      }\r\n      if (type === \"TV Shows\") {\r\n        return searchedList.filter((x) => x.media_type === \"tv\").length;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          width: \"100%\",\r\n          marginTop: \"2%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"search\"\r\n          style={{\r\n            width: \"30%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <TextField value={textFieldText} onChange={handleTextChange} />\r\n          <IconButton\r\n            iconProps={{ iconName: \"Search\" }}\r\n            style={{ backgroundColor: \"#032541\", color: \"white\" }}\r\n            onClick={onSearchButtonClick}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {displaySearchResults && (\r\n        <Pivot style={{ textAlign: \"center\" }} onLinkClick={handleState}>\r\n          <PivotItem headerText=\"Movies\" itemCount={getCount(\"Movies\")} />\r\n          <PivotItem headerText=\"TV Shows\" itemCount={getCount(\"TV Shows\")} />\r\n        </Pivot>\r\n      )}\r\n\r\n      {searchedList !== null &&\r\n        searchedList !== undefined &&\r\n        displaySearchResults &&\r\n        pivotSelected === \"Movies\" && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n              margin: \"1%\",\r\n            }}\r\n          >\r\n            {searchedList.map((item) => {\r\n              if (item.media_type === \"movie\") {\r\n                return <MovieDisplay key={item.id} details={item} />;\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n      {searchedList !== null &&\r\n        searchedList !== undefined &&\r\n        displaySearchResults &&\r\n        pivotSelected === \"TV Shows\" && (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n              margin: \"1%\",\r\n            }}\r\n          >\r\n            {searchedList.map((item) => {\r\n              if (item.media_type === \"tv\") {\r\n                return <TvShowDisplay key={item.id} details={item} />;\r\n              }\r\n              return null;\r\n            })}\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { config } from \"../../config/config\";\r\nimport noImage from \"../../assets/noimage.PNG\";\r\n\r\nconst RatingsDisplay = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"40%\",\r\n        padding: \"0.5%\",\r\n        margin: \"1%\",\r\n        justifyContent: \"space-between\",\r\n        boxShadow:\r\n          \"0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23)\",\r\n      }}\r\n    >\r\n      <img\r\n        style={{ width: \"50%\" }}\r\n        src={\r\n          props.details.poster_path !== null\r\n            ? `${config.BASE_URL_IMGAGES_W92}/${props.details.poster_path}`\r\n            : noImage\r\n        }\r\n        alt={props.details.title}\r\n      />\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\r\n        <h2 style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n          {props.details.title}\r\n        </h2>\r\n        <p style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n          {props.details.release_date}\r\n        </p>\r\n        <p style={{ textAlign: \"left\", marginLeft: \"2%\" }}>\r\n          {props.details.overview}\r\n        </p>\r\n        <p style={{ marginLeft: \"2%\" }}>Rating : {props.details.rating}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatingsDisplay;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { config } from \"../../config/config\";\r\nimport RatingsDisplay from \"./RatingDisplay\";\r\n\r\nconst MyRatings = (props) => {\r\n  const [ratingDetails, setRatingDetails] = useState(null);\r\n\r\n  //Fetching the data for My Ratings page\r\n  useEffect(() => {\r\n    let url = `${config.BASE_URL_API}/guest_session/${config.GUEST_SESSION_ID}/rated/movies?api_key=${config.API_KEY}&language=en-US&sort_by=created_at.asc`;\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setRatingDetails(data.results));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {ratingDetails !== null &&\r\n        ratingDetails !== undefined &&\r\n        ratingDetails.map((item) => {\r\n          return <RatingsDisplay details={item} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRatings;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <Link\r\n        style={{ color: \"white\", width: \"70%\", textDecoration: \"none\" }}\r\n        to=\"/\"\r\n      >\r\n        <h1 style={{ width: \"70%\" }}>Movie Reviews</h1>\r\n      </Link>\r\n      <ul className=\"nav-links\">\r\n        <Link style={{ color: \"white\" }} to=\"/search\">\r\n          <li>Search</li>\r\n        </Link>\r\n        <Link style={{ color: \"white\" }} to=\"/myratings\">\r\n          <li>My Ratings Page</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport home_cover from \"../../assets/home_cover.jpg\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <img src={home_cover} alt=\"media\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search\";\nimport MyRatings from \"./components/RatingsPage/MyRatings\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/myratings\" component={MyRatings} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}